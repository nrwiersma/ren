on:
  push:
    branches:
      - main
  pull_request:

name: run tests
jobs:
  test:

    runs-on: ubuntu-latest
    env:
      GOLANGCI_LINT_VERSION: v2.1.6

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        id: install-go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Download dependencies
        run: go mod download
        if: steps.install-go.outputs.cache-hit != 'true'

      - name: Run linter
        uses: golangci/golangci-lint-action@v8
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}

      - name: Setup gotestsum
        uses: gertd/action-gotestsum@v3.0.0
        with:
          gotestsum_version: v1.12.0

      - name: Run Tests
        run: gotestsum --junitfile tests.xml --format pkgname -- -covermode=count -coverprofile=coverage.out -race ./...

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "tests.xml"
        if: always()

      - name: Convert coverage.out to coverage.lcov
        uses: jandelgado/gcov2lcov-action@v1

      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean --snapshot
